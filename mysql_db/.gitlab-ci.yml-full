# Gera duas images docker: myqsl e httpmyadmin
# com o gitlab-runner executor SHELL, não foi necessária nenhuma imagem Docker no pipeline


variables:
    MYSQL_DATABASE: ifmt_db
    MYSQL_ROOT_PASSWORD: ifmt2
    DOCKER_NET: db
    MYSQL_CONTAINER_NAME: meu-mysql
    MYSQL_CLIENT_CONTAINER_NAME: meu-phpMyadmin
stages:
    - build
    - deploy
    #- build

build-image:
    #image: docker
    stage: build
    variables:
        DOCKER_TLS_CERTDIR: "/certs"
        MY_CI_REGISTRY: "gitlab.server.local:5050" 
    #services:
        #- name: docker:26.1.3-dind  
          #alias: docker
    script:
        - echo "Docker info"
        - docker info
        - echo "Trying to Log in!!!   ---- $MY_CI_REGISTRY - & ---$CI_REGISTRY"
        - docker login -u  $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - echo "Logged in!!!"
        - docker build -t $CI_REGISTRY/devops/db-mysql:v1 .
        - echo "Image built!!!"
        - docker push $CI_REGISTRY/devops/db-mysql:v1 
        - echo "Imagem  construida!!+++ ! "
        - echo "=================================================================="
        - echo "criando a imagem do mysql cliente:- phpMyadmin"
        - docker build -t $CI_REGISTRY/devops/db-mysql:phpMyadmin ./phpMyadmin 
        - echo "Imagem phpMyadmin construida!!!" 
        - docker push $CI_REGISTRY/devops/db-mysql:phpMyadmin 
        - echo "Imagem  phpMyadmin no repositorio+++! "

        # - echo "Deploying containers!!!"
        # - export DOCKER_HOST="ssh://ruy@192.168.0.20" 
        # - docker network create $DOCKER_NET
        # - docker run -td --name $MYSQL_CONTAINER_NAME --network=$DOCKER_NET -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD -v mysql-data:/var/lib/mysql  -p 8900:3306 $CI_REGISTRY/devops/db-mysql:v1 
        # - docker run -td  --name $MYSQL_CLIENT_CONTAINER_NAME --network=$DOCKER_NET   -e PMA_ARBITRARY=1 -p 9000:80 $CI_REGISTRY/devops/db-mysql:phpMyadmin 
        #- unset DOCKER_HOST

deploy_containers:
    #image: docker
    stage: deploy
    variables:
        DOCKER_TLS_CERTDIR: "/certs"
        
    script:
        
        #- echo "Deploying containers!!!"
        #- export DOCKER_HOST="ssh://ruy@192.168.0.20" 
        #- export DOCKER_HOST=tcp://192.168.0.20
        #- docker run --rm --net host busybox hostname -f 

        #- echo "docker host $DOCKER_HOST"
        #- docker info
        #- docker network create $DOCKER_NET
        - docker network inspect $DOCKER_NET || docker network create $DOCKER_NET
        - docker rm -f $MYSQL_CONTAINER_NAME 
        - docker run -td --name $MYSQL_CONTAINER_NAME --network=$DOCKER_NET -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD -v mysql-data:/var/lib/mysql  -p 8900:3306 $CI_REGISTRY/devops/db-mysql:v1 
        - docker rm -f $MYSQL_CLIENT_CONTAINER_NAME 
        - docker run -td  --name $MYSQL_CLIENT_CONTAINER_NAME --network=$DOCKER_NET   -e PMA_ARBITRARY=1 -p 9000:80 $CI_REGISTRY/devops/db-mysql:phpMyadmin 
        - unset DOCKER_HOST




# #gitlab-runner executor  SHELL
# variables:
#     MYSQL_DATABASE: ifmt_db
#     MYSQL_ROOT_PASSWORD: ifmt3
#     DOCKER_NET: db
#     MYSQL_CONTAINER_NAME: meu-mysql
#     MYSQL_CLIENT_CONTAINER_NAME: meu-phpMyadmin
# stages:
#     - build
#     - deploy
#     #- build

# build-image:
#     stage: build
#     variables:
#         DOCKER_TLS_CERTDIR: "/certs"
#         MY_CI_REGISTRY: "gitlab.server.local:5050" 
#     script:
#         - echo "Docker info"
#         - docker info
#         - echo "Trying to Log in!!!   ---- $MY_CI_REGISTRY - & ---$CI_REGISTRY"
#         - docker login -u  $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#         - echo "Logged in!!!"
#         - docker build -t $CI_REGISTRY/devops/db-mysql:v1 .
#         - echo "Image built!!!"
#         - docker push $CI_REGISTRY/devops/db-mysql:v1 
#         - echo "Imagem  construida!!+++ ! "
#         - echo "=================================================================="
#         - echo "criando a imagem do mysql cliente:- phpMyadmin"
#         - docker build -t $CI_REGISTRY/devops/db-mysql:phpMyadmin ./phpMyadmin 
#         - echo "Imagem phpMyadmin construida!!!"
#         - docker push $CI_REGISTRY/devops/db-mysql:phpMyadmin 
#         - echo "Imagem  phpMyadmin no repositorio+++! "


# deploy_containers:
#     stage: deploy
#     variables:
#         DOCKER_TLS_CERTDIR: "/certs"    
#     script:
#         - docker network inspect $DOCKER_NET || docker network create $DOCKER_NET
#         - docker rm -f $MYSQL_CONTAINER_NAME 
#         - docker run -td --name $MYSQL_CONTAINER_NAME --network=$DOCKER_NET -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD -v mysql-data:/var/lib/mysql  -p 8900:3306 $CI_REGISTRY/devops/db-mysql:v1 
#         - docker rm -f $MYSQL_CLIENT_CONTAINER_NAME 
#         - docker run -td  --name $MYSQL_CLIENT_CONTAINER_NAME --network=$DOCKER_NET   -e PMA_ARBITRARY=1 -p 9000:80 $CI_REGISTRY/devops/db-mysql:phpMyadmin 
#         - unset DOCKER_HOST



# Com o executor Docker
variables:
    MYSQL_DATABASE: ifmt_db
    MYSQL_ROOT_PASSWORD: ifmt3
    DOCKER_NET: db
    MYSQL_CONTAINER_NAME: meu-mysql
    MYSQL_CLIENT_CONTAINER_NAME: meu-phpMyadmin
stages:
    - build
    - deploy

build-image:
    image: docker
    stage: build
    variables:
        DOCKER_TLS_CERTDIR: "/certs"
        MY_CI_REGISTRY: "gitlab.server.local:5050" 
    services:
        - name: docker:26.1.3-dind  
          alias: docker
    script:
        - echo "Docker info"
        - docker info
        - echo "Trying to Log in!!!   ---- $MY_CI_REGISTRY - & ---$CI_REGISTRY"
        - docker login -u  $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - echo "Logged in!!!"
        - docker build -t $CI_REGISTRY/devops/db-mysql:v1 .
        - echo "Image built!!!"
        - docker push $CI_REGISTRY/devops/db-mysql:v1 
        - echo "Imagem  construida!!+++ ! "
        - echo "=================================================================="
        - echo "criando a imagem do mysql cliente:- phpMyadmin"
        - docker build -t $CI_REGISTRY/devops/db-mysql:phpMyadmin ./phpMyadmin 
        - echo "Imagem phpMyadmin construida!!!"
        - docker push $CI_REGISTRY/devops/db-mysql:phpMyadmin 
        - echo "Imagem  phpMyadmin no repositorio+++! "

# Com o executor DOCKER
deploy_containers:
    image: docker
    stage: deploy
    variables:
        DOCKER_TLS_CERTDIR: "/certs"   
    script:
        - docker network inspect $DOCKER_NET || docker network create $DOCKER_NET
        - docker rm -f $MYSQL_CONTAINER_NAME 
        - docker run -td --name $MYSQL_CONTAINER_NAME --network=$DOCKER_NET -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD -v mysql-data:/var/lib/mysql  -p 8900:3306 $CI_REGISTRY/devops/db-mysql:v1 
        - docker rm -f $MYSQL_CLIENT_CONTAINER_NAME 
        - docker run -td  --name $MYSQL_CLIENT_CONTAINER_NAME --network=$DOCKER_NET   -e PMA_ARBITRARY=1 -p 9000:80 $CI_REGISTRY/devops/db-mysql:phpMyadmin 
        - unset DOCKER_HOST